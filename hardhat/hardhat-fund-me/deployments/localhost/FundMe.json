{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8e326c809cbd69bd3265b737b331781f2e422b41a3b8d467e3bfaa118d05c2de",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1030025",
    "logsBloom": "0x
    "blockHash": "0xd813e6370925c4937c8aab5778ed3912249523b376e497209834d13aaa8f1dbf",
    "transactionHash": "0x8e326c809cbd69bd3265b737b331781f2e422b41a3b8d467e3bfaa118d05c2de",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1030025",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "2340cedb3eb0a8a9e8f273eb5c5134c2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Petar Dzhunov\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\nimport \\\"./PriceConvertor.sol\\\"; \\n\\nerror FundMe__NotOwner();\\n\\n/** @title A contract for crowd funding\\n\\t*\\t@author Petar Dzhunov\\n \\t*\\t@notice This contract is to demo a sample funding contract\\n \\t*\\t@dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n\\n    using PriceConvertor for uint256;\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    address[] private s_funders;\\n    mapping (address => uint256) private s_addressToAmountFunded;\\n    address private immutable i_owner;\\n    // we pass the address price feed depending on the chain we are on\\n\\n\\t\\tAggregatorV3Interface private s_priceFeed;\\n\\t\\t     \\n    modifier onlyOwner{\\n        if(msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n\\t\\t\\t\\ts_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n\\t/**\\n\\t\\t* @notice This function funds this contract\\n\\t\\t* @dev This implements price feeds as our library\\n\\t */\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >=  MINIMUM_USD,\\\"Didn't send enough\\\");   //1e18 = 1*10**18 == 1ETH (in wei)\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for(uint256 funderIndex = 0; funderIndex < s_funders.length; funderIndex++) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0); // reseting the array\\n       (bool callSuccess,) =  i_owner.call{value: address(this).balance}(\\\"\\\");\\n       require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n\\t\\tfunction cheaperWithdraw() public onlyOwner {\\n\\t\\t\\taddress[] memory funders = s_funders;\\n\\t\\t\\t// only mappings can't be in memory;\\n\\t\\t\\tfor(uint256 funderIndex=0; funderIndex < funders.length; funderIndex++) {\\n\\t\\t\\t\\taddress funder = funders[funderIndex];\\n\\t\\t\\t\\ts_addressToAmountFunded[funder] = 0;\\n\\t\\t\\t}\\n\\t\\t\\ts_funders = new address[](0);\\n       (bool callSuccess,) =  i_owner.call{value: address(this).balance}(\\\"\\\");\\n       require(callSuccess, \\\"Call failed\\\");\\n\\t\\t}\\n\\n\\t\\tfunction getOwner() public view returns(address) {\\n\\t\\t\\treturn i_owner;\\n\\t\\t}\\n\\n\\t\\tfunction getFunder(uint256 index) public view returns(address) {\\n\\t\\t\\treturn s_funders[index];\\n\\t\\t}\\n\\n\\t\\tfunction getAddressToAmountFunded(address funder) public view returns(uint256) {\\n\\t\\t\\treturn s_addressToAmountFunded[funder];\\n\\t\\t}\\n\\n\\t\\tfunction getPriceFeed() public view returns (AggregatorV3Interface) {\\n\\t\\t\\treturn s_priceFeed;\\n\\t\\t}\\n\\t\\t}\",\"keccak256\":\"0x4a7c5cb7417508d023fab640d5c73deac767788727328bd14928f7f18d28ae61\",\"license\":\"MIT\"},\"contracts/PriceConvertor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConvertor {\\n\\nfunction getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256) {\\n        (,int price,,,) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10); // 1**10 == 10000000000\\n    }\\n\\n    function getConversionRate(uint256 ethAmount,AggregatorV3Interface priceFeed) internal view returns(uint256) { \\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0xea1da2d6cdbec7f1f0f49665413b9387bb566b81d93b91a9ad3d1928b5cbf556\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012d4380380620012d4833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6111476200018d600039600081816101fe015281816103910152818161046d015281816105e601526107dc01526111476000f3fe60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461012a578063b60d428814610155578063be2693f01461015f578063d7b4750c146101765761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100d4578063893d20e8146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610ad5565b6101b3565b6040516100b49190610b1b565b60405180910390f35b3480156100c957600080fd5b506100d26101fc565b005b3480156100e057600080fd5b506100e961045c565b6040516100f69190610b1b565b60405180910390f35b34801561010b57600080fd5b50610114610469565b6040516101219190610b45565b60405180910390f35b34801561013657600080fd5b5061013f610491565b60405161014c9190610bbf565b60405180910390f35b61015d6104bb565b005b34801561016b57600080fd5b506101746105e4565b005b34801561018257600080fd5b5061019d60048036038101906101989190610c06565b6108a8565b6040516101aa9190610b45565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610281576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561032c5760008082815481106102a6576102a5610c33565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061032490610c91565b915050610284565b50600067ffffffffffffffff81111561034857610347610cda565b5b6040519080825280602002602001820160405280156103765781602001602082028036833780820191505090505b506000908051906020019061038c9291906109cb565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516103d390610d3a565b60006040518083038185875af1925050503d8060008114610410576040519150601f19603f3d011682016040523d82523d6000602084013e610415565b606091505b5050905080610459576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045090610dac565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104fa600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ef90919063ffffffff16565b101561053b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053290610e18565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610669576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106ec57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106a2575b5050505050905060005b815181101561077757600082828151811061071457610713610c33565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076f90610c91565b9150506106f6565b50600067ffffffffffffffff81111561079357610792610cda565b5b6040519080825280602002602001820160405280156107c15781602001602082028036833780820191505090505b50600090805190602001906107d79291906109cb565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161081e90610d3a565b60006040518083038185875af1925050503d806000811461085b576040519150601f19603f3d011682016040523d82523d6000602084013e610860565b606091505b50509050806108a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089b90610dac565b60405180910390fd5b5050565b60008082815481106108bd576108bc610c33565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108fb8361092b565b90506000670de0b6b3a764000085836109149190610e38565b61091e9190610ec1565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561097457600080fd5b505afa158015610988573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ac9190610f7f565b5050509150506402540be400816109c39190610ffa565b915050919050565b828054828255906000526020600020908101928215610a44579160200282015b82811115610a435782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109eb565b5b509050610a519190610a55565b5090565b5b80821115610a6e576000816000905550600101610a56565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aa282610a77565b9050919050565b610ab281610a97565b8114610abd57600080fd5b50565b600081359050610acf81610aa9565b92915050565b600060208284031215610aeb57610aea610a72565b5b6000610af984828501610ac0565b91505092915050565b6000819050919050565b610b1581610b02565b82525050565b6000602082019050610b306000830184610b0c565b92915050565b610b3f81610a97565b82525050565b6000602082019050610b5a6000830184610b36565b92915050565b6000819050919050565b6000610b85610b80610b7b84610a77565b610b60565b610a77565b9050919050565b6000610b9782610b6a565b9050919050565b6000610ba982610b8c565b9050919050565b610bb981610b9e565b82525050565b6000602082019050610bd46000830184610bb0565b92915050565b610be381610b02565b8114610bee57600080fd5b50565b600081359050610c0081610bda565b92915050565b600060208284031215610c1c57610c1b610a72565b5b6000610c2a84828501610bf1565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c9c82610b02565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ccf57610cce610c62565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d24600083610d09565b9150610d2f82610d14565b600082019050919050565b6000610d4582610d17565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d96600b83610d4f565b9150610da182610d60565b602082019050919050565b60006020820190508181036000830152610dc581610d89565b9050919050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610e02601283610d4f565b9150610e0d82610dcc565b602082019050919050565b60006020820190508181036000830152610e3181610df5565b9050919050565b6000610e4382610b02565b9150610e4e83610b02565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e8757610e86610c62565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ecc82610b02565b9150610ed783610b02565b925082610ee757610ee6610e92565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f1181610ef2565b8114610f1c57600080fd5b50565b600081519050610f2e81610f08565b92915050565b6000819050919050565b610f4781610f34565b8114610f5257600080fd5b50565b600081519050610f6481610f3e565b92915050565b600081519050610f7981610bda565b92915050565b600080600080600060a08688031215610f9b57610f9a610a72565b5b6000610fa988828901610f1f565b9550506020610fba88828901610f55565b9450506040610fcb88828901610f6a565b9350506060610fdc88828901610f6a565b9250506080610fed88828901610f1f565b9150509295509295909350565b600061100582610f34565b915061101083610f34565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561104f5761104e610c62565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561108c5761108b610c62565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110c9576110c8610c62565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561110657611105610c62565b5b82820290509291505056fea264697066735822122075fa9ca2cf5c18814ee0c92119351353cdbbb7aa9d034757316e42f20f3545bf64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461012a578063b60d428814610155578063be2693f01461015f578063d7b4750c146101765761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100d4578063893d20e8146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610ad5565b6101b3565b6040516100b49190610b1b565b60405180910390f35b3480156100c957600080fd5b506100d26101fc565b005b3480156100e057600080fd5b506100e961045c565b6040516100f69190610b1b565b60405180910390f35b34801561010b57600080fd5b50610114610469565b6040516101219190610b45565b60405180910390f35b34801561013657600080fd5b5061013f610491565b60405161014c9190610bbf565b60405180910390f35b61015d6104bb565b005b34801561016b57600080fd5b506101746105e4565b005b34801561018257600080fd5b5061019d60048036038101906101989190610c06565b6108a8565b6040516101aa9190610b45565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610281576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561032c5760008082815481106102a6576102a5610c33565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061032490610c91565b915050610284565b50600067ffffffffffffffff81111561034857610347610cda565b5b6040519080825280602002602001820160405280156103765781602001602082028036833780820191505090505b506000908051906020019061038c9291906109cb565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516103d390610d3a565b60006040518083038185875af1925050503d8060008114610410576040519150601f19603f3d011682016040523d82523d6000602084013e610415565b606091505b5050905080610459576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045090610dac565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104fa600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ef90919063ffffffff16565b101561053b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053290610e18565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610669576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106ec57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106a2575b5050505050905060005b815181101561077757600082828151811061071457610713610c33565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076f90610c91565b9150506106f6565b50600067ffffffffffffffff81111561079357610792610cda565b5b6040519080825280602002602001820160405280156107c15781602001602082028036833780820191505090505b50600090805190602001906107d79291906109cb565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161081e90610d3a565b60006040518083038185875af1925050503d806000811461085b576040519150601f19603f3d011682016040523d82523d6000602084013e610860565b606091505b50509050806108a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089b90610dac565b60405180910390fd5b5050565b60008082815481106108bd576108bc610c33565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108fb8361092b565b90506000670de0b6b3a764000085836109149190610e38565b61091e9190610ec1565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561097457600080fd5b505afa158015610988573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ac9190610f7f565b5050509150506402540be400816109c39190610ffa565b915050919050565b828054828255906000526020600020908101928215610a44579160200282015b82811115610a435782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109eb565b5b509050610a519190610a55565b5090565b5b80821115610a6e576000816000905550600101610a56565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aa282610a77565b9050919050565b610ab281610a97565b8114610abd57600080fd5b50565b600081359050610acf81610aa9565b92915050565b600060208284031215610aeb57610aea610a72565b5b6000610af984828501610ac0565b91505092915050565b6000819050919050565b610b1581610b02565b82525050565b6000602082019050610b306000830184610b0c565b92915050565b610b3f81610a97565b82525050565b6000602082019050610b5a6000830184610b36565b92915050565b6000819050919050565b6000610b85610b80610b7b84610a77565b610b60565b610a77565b9050919050565b6000610b9782610b6a565b9050919050565b6000610ba982610b8c565b9050919050565b610bb981610b9e565b82525050565b6000602082019050610bd46000830184610bb0565b92915050565b610be381610b02565b8114610bee57600080fd5b50565b600081359050610c0081610bda565b92915050565b600060208284031215610c1c57610c1b610a72565b5b6000610c2a84828501610bf1565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c9c82610b02565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ccf57610cce610c62565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d24600083610d09565b9150610d2f82610d14565b600082019050919050565b6000610d4582610d17565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d96600b83610d4f565b9150610da182610d60565b602082019050919050565b60006020820190508181036000830152610dc581610d89565b9050919050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610e02601283610d4f565b9150610e0d82610dcc565b602082019050919050565b60006020820190508181036000830152610e3181610df5565b9050919050565b6000610e4382610b02565b9150610e4e83610b02565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e8757610e86610c62565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ecc82610b02565b9150610ed783610b02565b925082610ee757610ee6610e92565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f1181610ef2565b8114610f1c57600080fd5b50565b600081519050610f2e81610f08565b92915050565b6000819050919050565b610f4781610f34565b8114610f5257600080fd5b50565b600081519050610f6481610f3e565b92915050565b600081519050610f7981610bda565b92915050565b600080600080600060a08688031215610f9b57610f9a610a72565b5b6000610fa988828901610f1f565b9550506020610fba88828901610f55565b9450506040610fcb88828901610f6a565b9350506060610fdc88828901610f6a565b9250506080610fed88828901610f1f565b9150509295509295909350565b600061100582610f34565b915061101083610f34565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561104f5761104e610c62565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561108c5761108b610c62565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110c9576110c8610c62565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561110657611105610c62565b5b82820290509291505056fea264697066735822122075fa9ca2cf5c18814ee0c92119351353cdbbb7aa9d034757316e42f20f3545bf64736f6c63430008080033",
  "devdoc": {
    "author": "Petar Dzhunov",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feeds as our library"
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this contract"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}